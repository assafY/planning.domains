angular.module("app",["ngMaterial","ngAnimate","ngRoute","ngMessages","ngFileUpload"]).run(["$rootScope","$location","$timeout",function(e,o,l){e.$on("$viewContentLoaded",function(){l(function(){componentHandler.upgradeAllRegistered()})})}]),angular.module("app").controller("CompetitionController",["$rootScope","$scope","CompetitionService",function(e,o,l){e.leaderboard?o.leaderboard=e.leaderboard:l.fetchLeaderboard().success(function(l){l&&(console.log(l),o.leaderboard=e.leaderboard=l)})}]),angular.module("app").service("CompetitionService",["$http",function(e){this.fetchLeaderboard=function(){return e.get("/api/domains/leaderboard")}}]),angular.module("app").controller("DomainController",["$rootScope","$scope","DomainService",function(e,o,l){e.domains?o.domains=e.domains:l.fetchAll().success(function(l){l&&(o.domains=e.domains=l)}),o.getDomain=function(o){l.fetchDomain(o).success(function(o){e.currentDomain=o,l.singleDomainView()})}}]),angular.module("app").service("DomainService",["$http","$location",function(e,o){var l;this.fetchAll=function(){return e.get("/api/domains")},this.fetchDomain=function(o){return l=o,e({url:"/api/domains/"+o,method:"GET",params:{domainId:o}})},this.fetchPddlFile=function(o){return e({url:"/api/domains/"+l+"/"+o,method:"GET",params:{domainId:l,fileName:o}})},this.singleDomainView=function(){o.path("/view/domain")},this.problemView=function(){o.path("/view/domain/pddl")},this.domainView=function(){o.path("/view/domain/pddl")}}]),angular.module("app").controller("DomainViewController",["$rootScope","$scope","DomainService",function(e,o,l){o.domain=e.currentDomain,o.getPddlFile=function(o){l.fetchPddlFile(o).success(function(o){o&&(e.pddl=o),l.problemView()})}}]),angular.module("app").controller("MainController",["$scope",function(e){}]),angular.module("app").controller("PddlViewController",["$rootScope","$scope",function(e,o){o.pddl=e.pddl}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"MainController",templateUrl:"index.html"}).when("/view",{controller:"DomainController",templateUrl:"view.html"}).when("/view/domain",{controller:"DomainViewController",templateUrl:"domain-view.html"}).when("/view/domain/pddl",{controller:"PddlViewController",templateUrl:"pddl-view.html"}).when("/submit",{controller:"SubmitController",templateUrl:"submit.html"}).when("/submit/planner",{controller:"SubmitController",templateUrl:"submit-planner.html"}).when("/submit/success",{controller:"SubmitController",templateUrl:"success.html"}).when("/submit/error",{controller:"SubmitController",templateUrl:"error.html"}).when("/competition",{controller:"CompetitionController",templateUrl:"competition.html"})}]),angular.module("app").controller("SubmitController",["$scope","$rootScope","$timeout","Upload","SubmitService",function(e,o,l,i,n){e.allDomainFiles=[{id:"domain1"}],e.publishDate=new Date,e.formSubmitted=function(){return o.formSubmitted===!0?!0:!1},e.addDomain=function(){if(e.allDomainFiles[e.allDomainFiles.length-1].domainFile&&e.allDomainFiles[e.allDomainFiles.length-1].problemFiles){var o=e.allDomainFiles.length+1;e.allDomainFiles.push({id:"domain"+o})}},e.getUploadButton=function(e){angular.element(document.getElementById(e).click())},e.submitForm=function(){if(e.submitted=!0,e.allDomainFiles[0].domainFile&&e.allDomainFiles[0].problemFiles){e.form.publishDate=e.publishDate,e.form.domainFiles=[];for(var l=0;l<e.allDomainFiles.length;l++)if(e.allDomainFiles[l].domainFile&&e.allDomainFiles[l].problemFiles){problemFilesNames=[];for(var i=0;i<e.allDomainFiles[l].problemFiles.length;i++)problemFilesNames.push(e.allDomainFiles[l].problemFiles[i].name);e.form.domainFiles[l]={domainFile:e.allDomainFiles[l].domainFile.name,problemFiles:problemFilesNames}}n.submitDomainForm(e.form).success(function(l){o.formSubmitted=!0,e.uploadFiles(l).success(function(){n.formSuccess()}).error(function(){n.formError()})})}},e.uploadFiles=function(o){for(var l=[],n=0;n<e.allDomainFiles.length;++n)if(e.allDomainFiles[n].domainFile&&e.allDomainFiles[n].problemFiles){l.push(e.allDomainFiles[n].domainFile);for(var t=0;t<e.allDomainFiles[n].problemFiles.length;++t)l.push(e.allDomainFiles[n].problemFiles[t])}return i.upload({url:"/api/upload",arrayKey:"",data:{files:l,dirname:o}})}}]),angular.module("app").service("SubmitService",["$http","$location",function(e,o){this.submitDomainForm=function(o){return e({url:"/api/upload/domain-form",method:"POST",data:o})},this.formSuccess=function(){o.path("/submit/success")},this.formError=function(){o.path("/submit/error")}}]);
//# sourceMappingURL=data:application/json;base64,
